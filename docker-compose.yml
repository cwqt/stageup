version: "3"

networks:
  default:
    driver: bridge

services:
  api:
    container_name: api
    env_file:
     - .env.${NODE_ENV:-development}
    environment: 
      WAIT_HOSTS: postgres:5432, redis:6379
    build: 
      context: .
      dockerfile: ./apps/backend/Dockerfile
    depends_on:
      - redis
      - postgres
    links:
     - postgres
     - redis
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: ingress
    networks:
      default:
        aliases:
          - api

  runner:
    container_name: runner
    env_file:
     - .env.${NODE_ENV:-development}
    environment: 
      WAIT_HOSTS: redis:6379, api:3000
    build: 
      context: .
      dockerfile: ./apps/runner/Dockerfile
    depends_on:
      - redis
      - api
    links:
     - redis
    ports:
      - "3001:3001"
    networks:
      default:
        aliases:
          - runner

  web:
    container_name: nginx
    build: 
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    volumes:
      - ./dist/apps/frontend:/usr/share/nginx/html
      - ./dist/apps/frontend:/var/www/html
      - ./apps/frontend/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - api

  postgres:
    container_name: psql
    hostname: postgres
    restart: always
    image: "postgres:11"
    env_file:
     - .env.${NODE_ENV:-development}
    volumes:
      - ./store/postgres:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: nc -z localhost 5432

  redis:
    container_name: redis
    hostname: redis
    image: "redis"
    env_file:
     - .env.${NODE_ENV:-development}
    ports:
      - "6379:6379"