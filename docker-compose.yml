version: '3'
networks:
  default:
    driver: bridge

services:
  backend:
    container_name: backend
    env_file: '.env.${NODE_ENV:-development}'
    environment:
      POSTGRES_HOST: host.docker.internal
      WAIT_HOSTS: 'postgres:5432, redis:6379'
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    depends_on: [postgres, redis]
    links: [postgres, redis]
    ports: ['3000:3000']

  frontend:
    container_name: nginx
    env_file: '.env.${NODE_ENV:-development}'
    depends_on: [backend]
    environment:
      API_HOST: 'host.docker.internal:3000'
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    volumes: ['./dist/apps/frontend:/usr/share/nginx/html']
    ports: ['80:80']

  postgres:
    container_name: psql
    hostname: postgres
    restart: always
    image: 'postgres:11'
    env_file: '.env.${NODE_ENV:-development}'
    volumes: ['./store/postgres:/var/lib/postgresql/data/']
    ports: ['5432:5432']
    healthcheck:
      test: nc -z localhost 5432

  redis:
    container_name: redis
    hostname: redis
    image: redis
    env_file: '.env.${NODE_ENV:-development}'
    ports: ['6379:6379']
