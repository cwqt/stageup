{
  "version": 2,
  "projects": {
    "backend": {
      "root": "apps/backend",
      "sourceRoot": "apps/backend/src",
      "projectType": "application",
      "prefix": "backend",
      "i18n": {
        "sources": ["apps/backend/src/i18n/i18n.hjson", "libs/interfaces/src/i18n/i18n.hjson"],
        "path": "apps/backend/src/i18n",
        "locales": ["en", "nb"]
      },
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/backend",
            "main": "apps/backend/src/index.ts",
            "tsConfig": "apps/backend/tsconfig.app.json",
            "showCircularDependencies": false,
            "generatePackageJson": true,
            "assets": ["apps/backend/src/i18n"],
            "maxWorkers": 1,
            "memoryLimit": 1024
          },
          "configurations": {
            "development": {
              "optimization": false
            },
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            },
            "staging": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "configurations": {
            "development": {
              "buildTarget": "backend:build:development",
              "inspect": false,
              "port": 7777
            },
            "testing": {
              "buildTarget": "backend:build:development"
            },
            "staging": {
              "buildTarget": "backend:build:staging"
            },
            "production": {
              "buildTarget": "backend:build:production"
            }
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/backend"],
          "options": {
            "passWithNoTests": true,
            "runInBand": false,
            "jestConfig": "apps/backend/jest.config.js",
            "tsConfig": "apps/backend/tsconfig.spec.json"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "directory": "apps/backend",
            "lintFilePatterns": ["apps/backend/**/*.{ts,tsx,js,jsx}"]
          }
        }
      }
    },
    "frontend": {
      "projectType": "application",
      "root": "apps/frontend",
      "sourceRoot": "apps/frontend/src",
      "prefix": "app",
      "sourceLocale": "en",
      "i18n": {
        "locales": {
          "nb": "apps/frontend/src/i18n/messages.nb.xlf",
          "en": "apps/frontend/src/i18n/messages.en.xlf"
        }
      },
      "targets": {
        "build": {
          "executor": "@angular-builders/custom-webpack:browser",
          "options": {
            "customWebpackConfig": {
              "path": "apps/frontend/webpack.config.js"
            },
            "outputPath": "dist/apps/frontend",
            "index": "apps/frontend/src/index.html",
            "main": "apps/frontend/src/main.ts",
            "polyfills": "apps/frontend/src/polyfills.ts",
            "tsConfig": "apps/frontend/tsconfig.app.json",
            "aot": true,
            "assets": ["apps/frontend/src/favicon.ico", "apps/frontend/src/assets"],
            "styles": [
              "apps/frontend/src/tailwind.scss",
              "apps/frontend/src/styles.scss",
              "node_modules/plyr/dist/plyr.css",
              "apps/frontend/src/assets/fonts/fonts.css"
            ],
            "scripts": [],
            "i18nMissingTranslation": "warning",
            "localize": ["nb"]
          },
          "configurations": {
            "en": { "localize": ["en"] },
            "nb": { "localize": ["nb"] },
            "development": {
              "fileReplacements": [
                {
                  "replace": "apps/frontend/src/environments/environment.ts",
                  "with": "apps/frontend/src/environments/environment.development.ts"
                }
              ],
              "optimization": false,
              "outputHashing": "none",
              "sourceMap": true,
              "extractCss": true,
              "namedChunks": false,
              "showCircularDependencies": false,
              "aot": true,
              "extractLicenses": false,
              "statsJson": false,
              "progress": true,
              "vendorChunk": true,
              "buildOptimizer": false
            },
            "staging": {
              "fileReplacements": [
                {
                  "replace": "apps/frontend/src/environments/environment.ts",
                  "with": "apps/frontend/src/environments/environment.staging.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true
            },
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/frontend/src/environments/environment.ts",
                  "with": "apps/frontend/src/environments/environment.production.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true
            }
          }
        },
        "serve": {
          "executor": "@angular-builders/custom-webpack:dev-server",
          "configurations": {
            "en": { "browserTarget": ["frontend:build:en"] },
            "nb": { "browserTarget": ["frontend:build:nb"] },
            "development": {
              "browserTarget": "frontend:build:development",
              "proxyConfig": "apps/frontend/proxy.conf.json"
            },
            "staging": {
              "browserTarget": "frontend:build:staging"
            },
            "production": {
              "browserTarget": "frontend:build:production"
            }
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/frontend"],
          "options": {
            "passWithNoTests": true,
            "runInBand": false,
            "jestConfig": "apps/frontend/jest.config.js",
            "tsConfig": "apps/frontend/tsconfig.spec.json"
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "frontend:build",
            "outputPath": "apps/frontend/src/i18n"
          }
        },
        "xliffmerge": {
          "executor": "@ngx-i18nsupport/tooling:xliffmerge",
          "options": {
            "xliffmergeOptions": {
              "i18nFormat": "xlf",
              "srcDir": "apps/frontend/src/i18n",
              "genDir": "apps/frontend/src/i18n",
              "defaultLanguage": "en",
              "languages": ["en", "nb"]
            }
          }
        }
      }
    },
    "interfaces": {
      "root": "libs/interfaces",
      "sourceRoot": "libs/interfaces/src",
      "projectType": "library",
      "targets": {}
    },
    "api-tests": {
      "root": "apps/api-tests",
      "sourceRoot": "apps/api-tests/src",
      "projectType": "application",
      "prefix": "api-tests",
      "targets": {
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/api-tests"],
          "options": {
            "passWithNoTests": true,
            "runInBand": true,
            "jestConfig": "apps/api-tests/jest.config.js",
            "tsConfig": "apps/api-tests/tsconfig.spec.json"
          }
        }
      }
    },
    "shared": {
      "root": "libs/shared",
      "sourceRoot": "libs/shared/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/shared/**/*.ts"]
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/express"
  }
}
